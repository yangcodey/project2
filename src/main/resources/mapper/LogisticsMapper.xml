<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.project2.mapper.LogisticsMapper">

    <resultMap id="BaseResultMap" type="com.example.project2.entity.Logistics">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR"/>
        <result column="order_id" property="orderId" jdbcType="BIGINT"/>
        <result column="company" property="company" jdbcType="VARCHAR"/>
        <result column="tracking_no" property="trackingNo" jdbcType="VARCHAR"/>
        <result column="ship_time" property="shipTime" jdbcType="TIMESTAMP"/>
        <result column="expected_arrival" property="expectedArrival" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="current_location" property="currentLocation" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, logistics_no, order_id, company, tracking_no, ship_time, expected_arrival, status, current_location, remark, created_at, updated_at
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM logistics
        WHERE id = #{id}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM logistics
        ORDER BY created_at DESC
    </select>

    <select id="selectByOrderId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM logistics
        WHERE order_id = #{orderId}
        ORDER BY created_at DESC
    </select>

    <select id="selectByLogisticsNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM logistics
        WHERE logistics_no = #{logisticsNo}
    </select>

    <select id="selectByTrackingNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM logistics
        WHERE tracking_no = #{trackingNo}
    </select>

    <select id="selectByStatus" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM logistics
        WHERE status = #{status}
        ORDER BY created_at DESC
    </select>

    <select id="selectByCompany" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM logistics
        WHERE company = #{company}
        ORDER BY created_at DESC
    </select>

    <insert id="insert" parameterType="com.example.project2.entity.Logistics" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO logistics (logistics_no, order_id, company, tracking_no, ship_time, expected_arrival, status, current_location, remark, created_at, updated_at)
        VALUES (#{logisticsNo}, #{orderId}, #{company}, #{trackingNo}, #{shipTime}, #{expectedArrival}, #{status}, #{currentLocation}, #{remark}, NOW(), NOW())
    </insert>

    <update id="update" parameterType="com.example.project2.entity.Logistics">
        UPDATE logistics
        <set>
            <if test="logisticsNo != null">logistics_no = #{logisticsNo},</if>
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="company != null">company = #{company},</if>
            <if test="trackingNo != null">tracking_no = #{trackingNo},</if>
            <if test="shipTime != null">ship_time = #{shipTime},</if>
            <if test="expectedArrival != null">expected_arrival = #{expectedArrival},</if>
            <if test="status != null">status = #{status},</if>
            <if test="currentLocation != null">current_location = #{currentLocation},</if>
            <if test="remark != null">remark = #{remark},</if>
            updated_at = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStatus">
        UPDATE logistics
        SET status = #{status}, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateCurrentLocation">
        UPDATE logistics
        SET current_location = #{location}, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM logistics WHERE id = #{id}
    </delete>

    <select id="countByStatus" parameterType="java.lang.String" resultType="int">
        SELECT COUNT(*) FROM logistics WHERE status = #{status}
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM logistics
    </select>

    <select id="getCompanyDistribution" resultType="map">
        SELECT 
            company,
            COUNT(*) as count
        FROM logistics
        GROUP BY company
        ORDER BY count DESC
    </select>

</mapper>
