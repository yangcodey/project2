<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.project2.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.example.project2.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, username, password, real_name, phone, email, address, avatar, role, status, created_at, updated_at
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE id = #{id}
    </select>

    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE username = #{username}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        ORDER BY created_at DESC
    </select>

    <select id="selectByRole" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE role = #{role}
        ORDER BY created_at DESC
    </select>

    <select id="selectByUsernameAndPassword" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE username = #{username} AND password = #{password}
    </select>

    <insert id="insert" parameterType="com.example.project2.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (username, password, real_name, phone, email, address, avatar, role, status, created_at, updated_at)
        VALUES (#{username}, #{password}, #{realName}, #{phone}, #{email}, #{address}, #{avatar}, #{role}, #{status}, NOW(), NOW())
    </insert>

    <update id="update" parameterType="com.example.project2.entity.User">
        UPDATE users
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="address != null">address = #{address},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="role != null">role = #{role},</if>
            <if test="status != null">status = #{status},</if>
            updated_at = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStatus">
        UPDATE users
        SET status = #{status}, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM users
    </select>

    <select id="countByRole" parameterType="java.lang.String" resultType="int">
        SELECT COUNT(*) FROM users WHERE role = #{role}
    </select>

    <select id="countByStatus" parameterType="java.lang.Integer" resultType="int">
        SELECT COUNT(*) FROM users WHERE status = #{status}
    </select>

    <select id="getRegistrationTrend" resultType="map">
        SELECT 
            DATE(created_at) as date,
            COUNT(*) as count
        FROM users
        WHERE created_at >= DATE_SUB(NOW(), INTERVAL 30 DAY)
        GROUP BY DATE(created_at)
        ORDER BY date DESC
    </select>

    <select id="getUserPurchaseStats" resultType="map">
        SELECT 
            u.id as userId,
            u.username,
            u.real_name as realName,
            COUNT(o.id) as orderCount,
            COALESCE(SUM(o.total_amount), 0) as totalAmount
        FROM users u
        LEFT JOIN orders o ON u.id = o.buyer_id
        WHERE u.role = 'BUYER'
        GROUP BY u.id, u.username, u.real_name
        ORDER BY totalAmount DESC
        LIMIT 20
    </select>

</mapper>
